type FlowEndMessage @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  receiver: Bytes! # address
  flowRate: BigInt! # int96
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FlowStartMessage @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  receiver: Bytes! # address
  flowRate: BigInt! # int96
  startTime: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FlowTopupMessage @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  receiver: Bytes! # address
  newFlowRate: BigInt! # int96
  topupTime: BigInt! # uint256
  endTime: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RebalanceMessageSent @entity(immutable: true) {
  id: Bytes!
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StreamDelete @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  receiver: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StreamStart @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  receiver: Bytes! # address
  flowRate: BigInt! # int96
  startTime: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StreamUpdate @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  receiver: Bytes! # address
  flowRate: BigInt! # int96
  startTime: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UpgradeToken @entity(immutable: true) {
  id: Bytes!
  baseToken: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type XReceiveData @entity(immutable: true) {
  id: Bytes!
  originSender: Bytes! # address
  origin: BigInt! # uint32
  asset: Bytes! # address
  amount: BigInt! # uint256
  transferId: Bytes! # bytes32
  receiveTimestamp: BigInt! # uint256
  senderAccount: Bytes! # address
  receiverAccount: Bytes! # address
  flowRate: BigInt! # int256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type XStreamFlowTrigger @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  receiver: Bytes! # address
  selectedToken: Bytes! # address
  flowRate: BigInt! # int96
  amount: BigInt! # uint256
  streamStatus: BigInt! # uint256
  startTime: BigInt! # uint256
  bufferFee: BigInt! # uint256
  networkFee: BigInt! # uint256
  destinationDomain: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
